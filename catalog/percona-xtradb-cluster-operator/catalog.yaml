---
defaultChannel: stable-v1
name: percona-xtradb-cluster-operator
schema: olm.package
---
entries:
- name: percona-xtradb-cluster-operator.v1.8.0
- name: percona-xtradb-cluster-operator.v1.9.0
  replaces: percona-xtradb-cluster-operator.v1.8.0
- name: percona-xtradb-cluster-operator.v1.10.0
  replaces: percona-xtradb-cluster-operator.v1.9.0
name: stable-v1
package: percona-xtradb-cluster-operator
schema: olm.channel
---
image: quay.io/operatorhubio/percona-xtradb-cluster-operator:v1.10.0
name: percona-xtradb-cluster-operator.v1.10.0
package: percona-xtradb-cluster-operator
properties:
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-1-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-10-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-2-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-3-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-4-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-5-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-6-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-7-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-8-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-9-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1alpha1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBClusterBackup
    version: v1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBClusterRestore
    version: v1
- type: olm.package
  value:
    packageName: percona-xtradb-cluster-operator
    version: 1.10.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJiYWNrdXBzLnB4Yy5wZXJjb25hLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoicHhjLnBlcmNvbmEuY29tIiwibmFtZXMiOnsia2luZCI6IlBlcmNvbmFYdHJhREJCYWNrdXAiLCJsaXN0S2luZCI6IlBlcmNvbmFYdHJhREJCYWNrdXBMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiYmFja3VwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlciBuYW1lIiwianNvblBhdGgiOiIuc3BlYy5weGNDbHVzdGVyIiwibmFtZSI6IkNsdXN0ZXIiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2UgbmFtZSBmcm9tIHB4YyBzcGVjIiwianNvblBhdGgiOiIuc3RhdHVzLnN0b3JhZ2VOYW1lIiwibmFtZSI6IlN0b3JhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkJhY2t1cCBkZXN0aW5hdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5kZXN0aW5hdGlvbiIsIm5hbWUiOiJEZXN0aW5hdGlvbiIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiSm9iIHN0YXR1cyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkNvbXBsZXRlZCB0aW1lIiwianNvblBhdGgiOiIuc3RhdHVzLmNvbXBsZXRlZCIsIm5hbWUiOiJDb21wbGV0ZWQiLCJ0eXBlIjoiZGF0ZSJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJjbHVzdGVyYmFja3Vwcy5weGMucGVyY29uYS5jb20ifSwic3BlYyI6eyJncm91cCI6InB4Yy5wZXJjb25hLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3RlckJhY2t1cCIsImxpc3RLaW5kIjoiUGVyY29uYVh0cmFEQkNsdXN0ZXJCYWNrdXBMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJiYWNrdXBzIiwic2hvcnROYW1lcyI6WyJweGMtYmFja3VwIiwicHhjLWJhY2t1cHMiXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiY2x1c3RlcmJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXIgbmFtZSIsImpzb25QYXRoIjoiLnNwZWMucHhjQ2x1c3RlciIsIm5hbWUiOiJDbHVzdGVyIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJTdG9yYWdlIG5hbWUgZnJvbSBweGMgc3BlYyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdG9yYWdlTmFtZSIsIm5hbWUiOiJTdG9yYWdlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJCYWNrdXAgZGVzdGluYXRpb24iLCJqc29uUGF0aCI6Ii5zdGF0dXMuZGVzdGluYXRpb24iLCJuYW1lIjoiRGVzdGluYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkpvYiBzdGF0dXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJDb21wbGV0ZWQgdGltZSIsImpzb25QYXRoIjoiLnN0YXR1cy5jb21wbGV0ZWQiLCJuYW1lIjoiQ29tcGxldGVkIiwidHlwZSI6ImRhdGUifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InByb3BlcnRpZXMiOnsic3BlYyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwic3RhdHVzIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJjbHVzdGVycmVzdG9yZXMucHhjLnBlcmNvbmEuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJweGMucGVyY29uYS5jb20iLCJuYW1lcyI6eyJraW5kIjoiUGVyY29uYVh0cmFEQkNsdXN0ZXJSZXN0b3JlIiwibGlzdEtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3RlclJlc3RvcmVMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJyZXN0b3JlcyIsInNob3J0TmFtZXMiOlsicHhjLXJlc3RvcmUiLCJweGMtcmVzdG9yZXMiXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiY2x1c3RlcnJlc3RvcmUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDbHVzdGVyIG5hbWUiLCJqc29uUGF0aCI6Ii5zcGVjLnB4Y0NsdXN0ZXIiLCJuYW1lIjoiQ2x1c3RlciIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiSm9iIHN0YXR1cyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkNvbXBsZXRlZCB0aW1lIiwianNvblBhdGgiOiIuc3RhdHVzLmNvbXBsZXRlZCIsIm5hbWUiOiJDb21wbGV0ZWQiLCJ0eXBlIjoiZGF0ZSJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJjbHVzdGVycy5weGMucGVyY29uYS5jb20ifSwic3BlYyI6eyJncm91cCI6InB4Yy5wZXJjb25hLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3RlciIsImxpc3RLaW5kIjoiUGVyY29uYVh0cmFEQkNsdXN0ZXJMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJzIiwic2hvcnROYW1lcyI6WyJweGMiLCJweGNzIl0sInNpbmd1bGFyIjoicGVyY29uYXh0cmFkYmNsdXN0ZXIifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLmhvc3QiLCJuYW1lIjoiRW5kcG9pbnQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBweGMgbm9kZXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMucHhjLnJlYWR5IiwibmFtZSI6IlBYQyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgcHJveHlzcWwgbm9kZXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMucHJveHlzcWwucmVhZHkiLCJuYW1lIjoicHJveHlzcWwiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJwcm9wZXJ0aWVzIjp7InNwZWMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInN0YXR1cyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6ZmFsc2UsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX0seyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnN0YXR1cy5ob3N0IiwibmFtZSI6IkVuZHBvaW50IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgcHhjIG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLnB4Yy5yZWFkeSIsIm5hbWUiOiJQWEMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlJlYWR5IHByb3h5c3FsIG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLnByb3h5c3FsLnJlYWR5IiwibmFtZSI6InByb3h5c3FsIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBoYXByb3h5IG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLmhhcHJveHkucmVhZHkiLCJuYW1lIjoiaGFwcm94eSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InByb3BlcnRpZXMiOnsic3BlYyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwic3RhdHVzIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZSwic3VicmVzb3VyY2VzIjp7InNjYWxlIjp7ImxhYmVsU2VsZWN0b3JQYXRoIjoiLnN0YXR1cy5weGMubGFiZWxTZWxlY3RvclBhdGgiLCJzcGVjUmVwbGljYXNQYXRoIjoiLnNwZWMucHhjLnNpemUiLCJzdGF0dXNSZXBsaWNhc1BhdGgiOiIuc3RhdHVzLnB4Yy5yZWFkeSJ9LCJzdGF0dXMiOnt9fX0seyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnN0YXR1cy5ob3N0IiwibmFtZSI6IkVuZHBvaW50IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgcHhjIG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLnB4Yy5yZWFkeSIsIm5hbWUiOiJQWEMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlJlYWR5IHByb3h5c3FsIG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLnByb3h5c3FsLnJlYWR5IiwibmFtZSI6InByb3h5c3FsIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MS0xLTAiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InByb3BlcnRpZXMiOnsic3BlYyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwic3RhdHVzIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fSx7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLmhvc3QiLCJuYW1lIjoiRW5kcG9pbnQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBweGMgbm9kZXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMucHhjLnJlYWR5IiwibmFtZSI6IlBYQyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgcHJveHlzcWwgbm9kZXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMucHJveHlzcWwucmVhZHkiLCJuYW1lIjoicHJveHlzcWwiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYxLTItMCIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOmZhbHNlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19LHsiYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuaG9zdCIsIm5hbWUiOiJFbmRwb2ludCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlJlYWR5IHB4YyBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5weGMucmVhZHkiLCJuYW1lIjoiUFhDIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBwcm94eXNxbCBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5wcm94eXNxbC5yZWFkeSIsIm5hbWUiOiJwcm94eXNxbCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEtMy0wIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJwcm9wZXJ0aWVzIjp7InNwZWMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX0sInN0YXR1cyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6ZmFsc2UsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX0seyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnN0YXR1cy5ob3N0IiwibmFtZSI6IkVuZHBvaW50IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgcHhjIG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLnB4Yy5yZWFkeSIsIm5hbWUiOiJQWEMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlJlYWR5IHByb3h5c3FsIG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLnByb3h5c3FsLnJlYWR5IiwibmFtZSI6InByb3h5c3FsIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MS00LTAiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InByb3BlcnRpZXMiOnsic3BlYyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwic3RhdHVzIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZSwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319fSx7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLmhvc3QiLCJuYW1lIjoiRW5kcG9pbnQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBweGMgbm9kZXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMucHhjLnJlYWR5IiwibmFtZSI6IlBYQyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgcHJveHlzcWwgbm9kZXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMucHJveHlzcWwucmVhZHkiLCJuYW1lIjoicHJveHlzcWwiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYxLTUtMCIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOmZhbHNlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19LHsiYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuaG9zdCIsIm5hbWUiOiJFbmRwb2ludCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlJlYWR5IHB4YyBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5weGMucmVhZHkiLCJuYW1lIjoiUFhDIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBwcm94eXNxbCBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5wcm94eXNxbC5yZWFkeSIsIm5hbWUiOiJwcm94eXNxbCIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgaGFwcm94eSBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5oYXByb3h5LnJlYWR5IiwibmFtZSI6ImhhcHJveHkiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYxLTYtMCIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOmZhbHNlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19LHsiYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuaG9zdCIsIm5hbWUiOiJFbmRwb2ludCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlJlYWR5IHB4YyBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5weGMucmVhZHkiLCJuYW1lIjoiUFhDIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBwcm94eXNxbCBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5wcm94eXNxbC5yZWFkeSIsIm5hbWUiOiJwcm94eXNxbCIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgaGFwcm94eSBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5oYXByb3h5LnJlYWR5IiwibmFtZSI6ImhhcHJveHkiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYxLTctMCIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOmZhbHNlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19LHsiYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJqc29uUGF0aCI6Ii5zdGF0dXMuaG9zdCIsIm5hbWUiOiJFbmRwb2ludCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlJlYWR5IHB4YyBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5weGMucmVhZHkiLCJuYW1lIjoiUFhDIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBwcm94eXNxbCBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5wcm94eXNxbC5yZWFkeSIsIm5hbWUiOiJwcm94eXNxbCIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgaGFwcm94eSBub2RlcyIsImpzb25QYXRoIjoiLnN0YXR1cy5oYXByb3h5LnJlYWR5IiwibmFtZSI6ImhhcHJveHkiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwibmFtZSI6InYxLTgtMCIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOmZhbHNlLCJzdWJyZXNvdXJjZXMiOnsic2NhbGUiOnsibGFiZWxTZWxlY3RvclBhdGgiOiIuc3RhdHVzLnB4Yy5sYWJlbFNlbGVjdG9yUGF0aCIsInNwZWNSZXBsaWNhc1BhdGgiOiIuc3BlYy5weGMuc2l6ZSIsInN0YXR1c1JlcGxpY2FzUGF0aCI6Ii5zdGF0dXMucHhjLnJlYWR5In0sInN0YXR1cyI6e319fSx7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3RhdHVzLmhvc3QiLCJuYW1lIjoiRW5kcG9pbnQiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBweGMgbm9kZXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMucHhjLnJlYWR5IiwibmFtZSI6IlBYQyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgcHJveHlzcWwgbm9kZXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMucHJveHlzcWwucmVhZHkiLCJuYW1lIjoicHJveHlzcWwiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlJlYWR5IGhhcHJveHkgbm9kZXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMuaGFwcm94eS5yZWFkeSIsIm5hbWUiOiJoYXByb3h5IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MS05LTAiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InByb3BlcnRpZXMiOnsic3BlYyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwic3RhdHVzIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZSwic3VicmVzb3VyY2VzIjp7InNjYWxlIjp7ImxhYmVsU2VsZWN0b3JQYXRoIjoiLnN0YXR1cy5weGMubGFiZWxTZWxlY3RvclBhdGgiLCJzcGVjUmVwbGljYXNQYXRoIjoiLnNwZWMucHhjLnNpemUiLCJzdGF0dXNSZXBsaWNhc1BhdGgiOiIuc3RhdHVzLnB4Yy5yZWFkeSJ9LCJzdGF0dXMiOnt9fX0seyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnN0YXR1cy5ob3N0IiwibmFtZSI6IkVuZHBvaW50IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLnN0YXRlIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiUmVhZHkgcHhjIG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLnB4Yy5yZWFkeSIsIm5hbWUiOiJQWEMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlJlYWR5IHByb3h5c3FsIG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLnByb3h5c3FsLnJlYWR5IiwibmFtZSI6InByb3h5c3FsIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJSZWFkeSBoYXByb3h5IG5vZGVzIiwianNvblBhdGgiOiIuc3RhdHVzLmhhcHJveHkucmVhZHkiLCJuYW1lIjoiaGFwcm94eSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEtMTAtMCIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzY2FsZSI6eyJsYWJlbFNlbGVjdG9yUGF0aCI6Ii5zdGF0dXMucHhjLmxhYmVsU2VsZWN0b3JQYXRoIiwic3BlY1JlcGxpY2FzUGF0aCI6Ii5zcGVjLnB4Yy5zaXplIiwic3RhdHVzUmVwbGljYXNQYXRoIjoiLnN0YXR1cy5weGMucmVhZHkifSwic3RhdHVzIjp7fX19XX19
relatedImages:
- image: percona/percona-xtradb-cluster-operator:1.10.0
  name: ""
- image: quay.io/operatorhubio/percona-xtradb-cluster-operator:v1.10.0
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/percona-xtradb-cluster-operator:v1.8.0
name: percona-xtradb-cluster-operator.v1.8.0
package: percona-xtradb-cluster-operator
properties:
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-1-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-2-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-3-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-4-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-5-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-6-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-7-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-8-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1alpha1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBClusterBackup
    version: v1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBClusterRestore
    version: v1
- type: olm.package
  value:
    packageName: percona-xtradb-cluster-operator
    version: 1.8.0
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjFhbHBoYTEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW3tcImFwaVZlcnNpb25cIjpcInB4Yy5wZXJjb25hLmNvbS92MS04LTBcIixcImtpbmRcIjpcIlBlcmNvbmFYdHJhREJDbHVzdGVyXCIsXCJtZXRhZGF0YVwiOntcIm5hbWVcIjpcImNsdXN0ZXIxXCIsXCJmaW5hbGl6ZXJzXCI6W1wiZGVsZXRlLXB4Yy1wb2RzLWluLW9yZGVyXCJdfSxcInNwZWNcIjp7XCJjclZlcnNpb25cIjpcIjEuOC4wXCIsXCJzZWNyZXRzTmFtZVwiOlwibXktY2x1c3Rlci1zZWNyZXRzXCIsXCJ2YXVsdFNlY3JldE5hbWVcIjpcImtleXJpbmctc2VjcmV0LXZhdWx0XCIsXCJzc2xTZWNyZXROYW1lXCI6XCJteS1jbHVzdGVyLXNzbFwiLFwic3NsSW50ZXJuYWxTZWNyZXROYW1lXCI6XCJteS1jbHVzdGVyLXNzbC1pbnRlcm5hbFwiLFwibG9nQ29sbGVjdG9yU2VjcmV0TmFtZVwiOlwibXktbG9nLWNvbGxlY3Rvci1zZWNyZXRzXCIsXCJhbGxvd1Vuc2FmZUNvbmZpZ3VyYXRpb25zXCI6ZmFsc2UsXCJ1cGRhdGVTdHJhdGVneVwiOlwiU21hcnRVcGRhdGVcIixcInVwZ3JhZGVPcHRpb25zXCI6e1widmVyc2lvblNlcnZpY2VFbmRwb2ludFwiOlwiaHR0cHM6Ly9jaGVjay5wZXJjb25hLmNvbVwiLFwiYXBwbHlcIjpcImRpc2FibGVkXCIsXCJzY2hlZHVsZVwiOlwiMCA0ICogKiAqXCJ9LFwicHhjXCI6e1wic2l6ZVwiOjMsXCJpbWFnZVwiOlwicGVyY29uYS9wZXJjb25hLXh0cmFkYi1jbHVzdGVyOjguMC4yMi0xMy4xXCIsXCJhdXRvUmVjb3ZlcnlcIjp0cnVlLFwicmVzb3VyY2VzXCI6e1wicmVxdWVzdHNcIjp7XCJtZW1vcnlcIjpcIjFHXCIsXCJjcHVcIjpcIjYwMG1cIn19LFwiYWZmaW5pdHlcIjp7XCJhbnRpQWZmaW5pdHlUb3BvbG9neUtleVwiOlwia3ViZXJuZXRlcy5pby9ob3N0bmFtZVwifSxcInBvZERpc3J1cHRpb25CdWRnZXRcIjp7XCJtYXhVbmF2YWlsYWJsZVwiOjF9LFwidm9sdW1lU3BlY1wiOntcInBlcnNpc3RlbnRWb2x1bWVDbGFpbVwiOntcInJlc291cmNlc1wiOntcInJlcXVlc3RzXCI6e1wic3RvcmFnZVwiOlwiNkdcIn19fX0sXCJncmFjZVBlcmlvZFwiOjYwMH0sXCJoYXByb3h5XCI6e1wiZW5hYmxlZFwiOnRydWUsXCJzaXplXCI6MyxcImltYWdlXCI6XCJwZXJjb25hL3BlcmNvbmEteHRyYWRiLWNsdXN0ZXItb3BlcmF0b3I6MS44LjAtaGFwcm94eVwiLFwicmVzb3VyY2VzXCI6e1wicmVxdWVzdHNcIjp7XCJtZW1vcnlcIjpcIjFHXCIsXCJjcHVcIjpcIjYwMG1cIn19LFwiYWZmaW5pdHlcIjp7XCJhbnRpQWZmaW5pdHlUb3BvbG9neUtleVwiOlwia3ViZXJuZXRlcy5pby9ob3N0bmFtZVwifSxcInBvZERpc3J1cHRpb25CdWRnZXRcIjp7XCJtYXhVbmF2YWlsYWJsZVwiOjF9LFwiZ3JhY2VQZXJpb2RcIjozMH0sXCJwcm94eXNxbFwiOntcImVuYWJsZWRcIjpmYWxzZSxcInNpemVcIjozLFwiaW1hZ2VcIjpcInBlcmNvbmEvcGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvcjoxLjguMC1wcm94eXNxbFwiLFwicmVzb3VyY2VzXCI6e1wicmVxdWVzdHNcIjp7XCJtZW1vcnlcIjpcIjFHXCIsXCJjcHVcIjpcIjYwMG1cIn19LFwiYWZmaW5pdHlcIjp7XCJhbnRpQWZmaW5pdHlUb3BvbG9neUtleVwiOlwia3ViZXJuZXRlcy5pby9ob3N0bmFtZVwifSxcInZvbHVtZVNwZWNcIjp7XCJwZXJzaXN0ZW50Vm9sdW1lQ2xhaW1cIjp7XCJyZXNvdXJjZXNcIjp7XCJyZXF1ZXN0c1wiOntcInN0b3JhZ2VcIjpcIjJHXCJ9fX19LFwicG9kRGlzcnVwdGlvbkJ1ZGdldFwiOntcIm1heFVuYXZhaWxhYmxlXCI6MX0sXCJncmFjZVBlcmlvZFwiOjMwfSxcImxvZ2NvbGxlY3RvclwiOntcImVuYWJsZWRcIjp0cnVlLFwiaW1hZ2VcIjpcInBlcmNvbmEvcGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvcjoxLjguMC1sb2djb2xsZWN0b3JcIn0sXCJwbW1cIjp7XCJlbmFibGVkXCI6ZmFsc2UsXCJpbWFnZVwiOlwicGVyY29uYS9wbW0tY2xpZW50OjIuMTIuMFwiLFwic2VydmVySG9zdFwiOlwibW9uaXRvcmluZy1zZXJ2aWNlXCIsXCJzZXJ2ZXJVc2VyXCI6XCJhZG1pblwifSxcImJhY2t1cFwiOntcImltYWdlXCI6XCJwZXJjb25hL3BlcmNvbmEteHRyYWRiLWNsdXN0ZXItb3BlcmF0b3I6MS44LjAtcHhjOC4wLWJhY2t1cFwiLFwicGl0clwiOntcImVuYWJsZWRcIjpmYWxzZSxcInN0b3JhZ2VOYW1lXCI6XCJTVE9SQUdFLU5BTUUtSEVSRVwiLFwidGltZUJldHdlZW5VcGxvYWRzXCI6NjB9LFwic3RvcmFnZXNcIjp7XCJzMy11cy13ZXN0XCI6e1widHlwZVwiOlwiczNcIixcInMzXCI6e1wiYnVja2V0XCI6XCJTMy1CQUNLVVAtQlVDS0VULU5BTUUtSEVSRVwiLFwiY3JlZGVudGlhbHNTZWNyZXRcIjpcIm15LWNsdXN0ZXItbmFtZS1iYWNrdXAtczNcIixcInJlZ2lvblwiOlwidXMtd2VzdC0yXCJ9fSxcImZzLXB2Y1wiOntcInR5cGVcIjpcImZpbGVzeXN0ZW1cIixcInZvbHVtZVwiOntcInBlcnNpc3RlbnRWb2x1bWVDbGFpbVwiOntcImFjY2Vzc01vZGVzXCI6W1wiUmVhZFdyaXRlT25jZVwiXSxcInJlc291cmNlc1wiOntcInJlcXVlc3RzXCI6e1wic3RvcmFnZVwiOlwiNkdcIn19fX19fSxcInNjaGVkdWxlXCI6W3tcIm5hbWVcIjpcInNhdC1uaWdodC1iYWNrdXBcIixcInNjaGVkdWxlXCI6XCIwIDAgKiAqIDZcIixcImtlZXBcIjozLFwic3RvcmFnZU5hbWVcIjpcInMzLXVzLXdlc3RcIn0se1wibmFtZVwiOlwiZGFpbHktYmFja3VwXCIsXCJzY2hlZHVsZVwiOlwiMCAwICogKiAqXCIsXCJrZWVwXCI6NSxcInN0b3JhZ2VOYW1lXCI6XCJmcy1wdmNcIn1dfX19LHtcImFwaVZlcnNpb25cIjpcInB4Yy5wZXJjb25hLmNvbS92MVwiLFwia2luZFwiOlwiUGVyY29uYVh0cmFEQkNsdXN0ZXJCYWNrdXBcIixcIm1ldGFkYXRhXCI6e1wibmFtZVwiOlwiYmFja3VwMVwifSxcInNwZWNcIjp7XCJweGNDbHVzdGVyXCI6XCJjbHVzdGVyMVwiLFwic3RvcmFnZU5hbWVcIjpcImZzLXB2Y1wifX0se1wiYXBpVmVyc2lvblwiOlwicHhjLnBlcmNvbmEuY29tL3YxYWxwaGExXCIsXCJraW5kXCI6XCJQZXJjb25hWHRyYURCQmFja3VwXCIsXCJtZXRhZGF0YVwiOntcIm5hbWVcIjpcImJhY2t1cDFcIn0sXCJzcGVjXCI6e1wicHhjQ2x1c3RlclwiOlwiY2x1c3RlcjFcIixcInN0b3JhZ2VOYW1lXCI6XCJzMy11cy13ZXN0XCJ9fSx7XCJhcGlWZXJzaW9uXCI6XCJweGMucGVyY29uYS5jb20vdjFcIixcImtpbmRcIjpcIlBlcmNvbmFYdHJhREJDbHVzdGVyUmVzdG9yZVwiLFwibWV0YWRhdGFcIjp7XCJuYW1lXCI6XCJyZXN0b3JlMVwifSxcInNwZWNcIjp7XCJweGNDbHVzdGVyXCI6XCJjbHVzdGVyMVwiLFwiYmFja3VwTmFtZVwiOlwiYmFja3VwMVwifX0se1wiYXBpVmVyc2lvblwiOlwicHhjLnBlcmNvbmEuY29tL3YxXCIsXCJraW5kXCI6XCJQZXJjb25hWHRyYURCQ2x1c3RlckJhY2t1cFwiLFwibWV0YWRhdGFcIjp7XCJuYW1lXCI6XCJiYWNrdXAxXCJ9LFwic3BlY1wiOntcInB4Y0NsdXN0ZXJcIjpcImNsdXN0ZXIxXCIsXCJzdG9yYWdlTmFtZVwiOlwiZnMtcHZjXCJ9fSx7XCJhcGlWZXJzaW9uXCI6XCJweGMucGVyY29uYS5jb20vdjFhbHBoYTFcIixcImtpbmRcIjpcIlBlcmNvbmFYdHJhREJCYWNrdXBcIixcIm1ldGFkYXRhXCI6e1wibmFtZVwiOlwiYmFja3VwMVwifSxcInNwZWNcIjp7XCJweGNDbHVzdGVyXCI6XCJjbHVzdGVyMVwiLFwic3RvcmFnZU5hbWVcIjpcInMzLXVzLXdlc3RcIn19LHtcImFwaVZlcnNpb25cIjpcInB4Yy5wZXJjb25hLmNvbS92MVwiLFwia2luZFwiOlwiUGVyY29uYVh0cmFEQkNsdXN0ZXJSZXN0b3JlXCIsXCJtZXRhZGF0YVwiOntcIm5hbWVcIjpcInJlc3RvcmUxXCJ9LFwic3BlY1wiOntcInB4Y0NsdXN0ZXJcIjpcImNsdXN0ZXIxXCIsXCJiYWNrdXBOYW1lXCI6XCJiYWNrdXAxXCJ9fV0iLCJjYXBhYmlsaXRpZXMiOiJEZWVwIEluc2lnaHRzIiwiY2F0ZWdvcmllcyI6IkRhdGFiYXNlIiwiY2VydGlmaWVkIjoidHJ1ZSIsImNvbnRhaW5lckltYWdlIjoicGVyY29uYS9wZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yOjEuOC4wIiwiY3JlYXRlZEF0IjoiMjAyMS0wNS0wNVQxMzoxMTo0NC4wMDBaIiwiZGVzY3JpcHRpb24iOiJQZXJjb25hIFh0cmFEQiBDbHVzdGVyIE9wZXJhdG9yIG1hbmFnZXMgdGhlIGxpZmVjeWNsZSBvZiBQZXJjb25hIFh0cmFEQiBjbHVzdGVyIGluc3RhbmNlcy4iLCJvcGVyYXRvcmh1Yi5pby91aS1tZXRhZGF0YS1tYXgtazhzLXZlcnNpb24iOiIxLjIxIiwicmVwb3NpdG9yeSI6Imh0dHBzOi8vZ2l0aHViLmNvbS9wZXJjb25hL3BlcmNvbmEteHRyYWRiLWNsdXN0ZXItb3BlcmF0b3IiLCJzdXBwb3J0IjoiUGVyY29uYSJ9LCJuYW1lIjoicGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvci52MS44LjAiLCJuYW1lc3BhY2UiOiJkZWZhdWx0In0sInNwZWMiOnsiYXBpc2VydmljZWRlZmluaXRpb25zIjp7fSwiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyI6eyJvd25lZCI6W3siZGVzY3JpcHRpb24iOiJJbnN0YW5jZSBvZiBhIFBlcmNvbmEgWHRyYURCIENsdXN0ZXIiLCJkaXNwbGF5TmFtZSI6IlBlcmNvbmFYdHJhREJDbHVzdGVyIiwia2luZCI6IlBlcmNvbmFYdHJhREJDbHVzdGVyIiwibmFtZSI6InBlcmNvbmF4dHJhZGJjbHVzdGVycy5weGMucGVyY29uYS5jb20iLCJyZXNvdXJjZXMiOlt7ImtpbmQiOiJEZXBsb3ltZW50IiwibmFtZSI6IiIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlNlcnZpY2UiLCJuYW1lIjoiIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiUmVwbGljYVNldCIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJQb2QiLCJuYW1lIjoiIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiU2VjcmV0IiwibmFtZSI6IiIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IkNvbmZpZ01hcCIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifV0sInNwZWNEZXNjcmlwdG9ycyI6W10sInN0YXR1c0Rlc2NyaXB0b3JzIjpbXSwidmVyc2lvbiI6InYxLTgtMCJ9LHsiZGVzY3JpcHRpb24iOiJJbnN0YW5jZSBvZiBhIFBlcmNvbmEgWHRyYURCIENsdXN0ZXIgQmFja3VwIiwiZGlzcGxheU5hbWUiOiJQZXJjb25hWHRyYURCQ2x1c3RlckJhY2t1cCIsImtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3RlckJhY2t1cCIsIm5hbWUiOiJwZXJjb25heHRyYWRiY2x1c3RlcmJhY2t1cHMucHhjLnBlcmNvbmEuY29tIiwicmVzb3VyY2VzIjpbeyJraW5kIjoiRGVwbG95bWVudCIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJTZXJ2aWNlIiwibmFtZSI6IiIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlJlcGxpY2FTZXQiLCJuYW1lIjoiIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiUG9kIiwibmFtZSI6IiIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlNlY3JldCIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJDb25maWdNYXAiLCJuYW1lIjoiIiwidmVyc2lvbiI6InYxIn1dLCJzcGVjRGVzY3JpcHRvcnMiOltdLCJzdGF0dXNEZXNjcmlwdG9ycyI6W10sInZlcnNpb24iOiJ2MSJ9LHsiZGVzY3JpcHRpb24iOiJJbnN0YW5jZSBvZiBhIFBlcmNvbmEgWHRyYURCIENsdXN0ZXIgUmVzdG9yZSIsImRpc3BsYXlOYW1lIjoiUGVyY29uYVh0cmFEQkNsdXN0ZXJSZXN0b3JlIiwia2luZCI6IlBlcmNvbmFYdHJhREJDbHVzdGVyUmVzdG9yZSIsIm5hbWUiOiJwZXJjb25heHRyYWRiY2x1c3RlcnJlc3RvcmVzLnB4Yy5wZXJjb25hLmNvbSIsInJlc291cmNlcyI6W3sia2luZCI6IkRlcGxveW1lbnQiLCJuYW1lIjoiIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiU2VydmljZSIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJSZXBsaWNhU2V0IiwibmFtZSI6IiIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlBvZCIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJTZWNyZXQiLCJuYW1lIjoiIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiQ29uZmlnTWFwIiwibmFtZSI6IiIsInZlcnNpb24iOiJ2MSJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbXSwic3RhdHVzRGVzY3JpcHRvcnMiOltdLCJ2ZXJzaW9uIjoidjEifSx7ImRlc2NyaXB0aW9uIjoiKExlZ2FjeSkgSW5zdGFuY2Ugb2YgYSBQZXJjb25hIFh0cmFEQiBDbHVzdGVyIEJhY2t1cCIsImRpc3BsYXlOYW1lIjoiUGVyY29uYVh0cmFEQkJhY2t1cCIsImtpbmQiOiJQZXJjb25hWHRyYURCQmFja3VwIiwibmFtZSI6InBlcmNvbmF4dHJhZGJiYWNrdXBzLnB4Yy5wZXJjb25hLmNvbSIsInJlc291cmNlcyI6W3sia2luZCI6IkRlcGxveW1lbnQiLCJuYW1lIjoiIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiU2VydmljZSIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJSZXBsaWNhU2V0IiwibmFtZSI6IiIsInZlcnNpb24iOiJ2MSJ9LHsia2luZCI6IlBvZCIsIm5hbWUiOiIiLCJ2ZXJzaW9uIjoidjEifSx7ImtpbmQiOiJTZWNyZXQiLCJuYW1lIjoiIiwidmVyc2lvbiI6InYxIn0seyJraW5kIjoiQ29uZmlnTWFwIiwibmFtZSI6IiIsInZlcnNpb24iOiJ2MSJ9XSwic3BlY0Rlc2NyaXB0b3JzIjpbXSwic3RhdHVzRGVzY3JpcHRvcnMiOltdLCJ2ZXJzaW9uIjoidjFhbHBoYTEifV0sInJlcXVpcmVkIjpbXX0sImRlc2NyaXB0aW9uIjoiXG4jIyBQZXJjb25hIGlzIENsb3VkIE5hdGl2ZVxuXG5UaGUgUGVyY29uYSBLdWJlcm5ldGVzIE9wZXJhdG9yIGZvciBQZXJjb25hIFh0cmFEQiBDbHVzdGVyIGF1dG9tYXRlcyB0aGUgY3JlYXRpb24sIGFsdGVyYXRpb24sIG9yIGRlbGV0aW9uIG9mIG5vZGVzIGluIHlvdXIgY2x1c3RlciBlbnZpcm9ubWVudC4gSXQgY2FuIGJlIHVzZWQgdG8gaW5zdGFudGlhdGUgYSBuZXcgZGF0YWJhc2UgY2x1c3RlciBvciB0byBzY2FsZSBhbiBleGlzdGluZyBkYXRhYmFzZSBjbHVzdGVyLiBUaGUgT3BlcmF0b3IgY29udGFpbnMgYWxsIG5lY2Vzc2FyeSBLdWJlcm5ldGVzIHNldHRpbmdzIHRvIHByb3ZpZGUgYSBwcm9wZXIgYW5kIGNvbnNpc3RlbnQgUGVyY29uYSBYdHJhREIgQ2x1c3RlciBpbnN0YW5jZS5cblxuQ29uc3VsdCB0aGUgW2RvY3VtZW50YXRpb25dKGh0dHBzOi8vcGVyY29uYS5naXRodWIuaW8vcGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvci8pIG9uIHRoZSBQZXJjb25hIEt1YmVybmV0ZXMgT3BlcmF0b3IgZm9yIFBlcmNvbmEgWHRyYURCIENsdXN0ZXIgZm9yIGNvbXBsZXRlIGRldGFpbHMgb24gY2FwYWJpbGl0aWVzIGFuZCBvcHRpb25zLlxuXG4jIyMgU3VwcG9ydGVkIEZlYXR1cmVzXG5cbiogKipTY2FsZSBZb3VyIENsdXN0ZXIqKiAgY2hhbmdlIHRoZSBgc2l6ZWAgcGFyYW1ldGVyIHRvIFthZGQgb3IgcmVtb3ZlIG1lbWJlcnNdKGh0dHBzOi8vcGVyY29uYS5naXRodWIuaW8vcGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvci9pbnN0YWxsL3NjYWxpbmcpIG9mIHRoZSBjbHVzdGVyLiBUaHJlZSBpcyB0aGUgbWluaW11bSByZWNvbW1lbmRlZCBzaXplIGZvciBhIGZ1bmN0aW9uaW5nIGNsdXN0ZXIuXG5cbiogKipNYW5hZ2UgWW91ciBVc2VycyoqICBbYWRkLCByZW1vdmUsIG9yIGNoYW5nZV0oaHR0cHM6Ly9wZXJjb25hLmdpdGh1Yi5pby9wZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yL2NvbmZpZ3VyZS91c2VycykgdGhlIHByaXZpbGVnZXMgb2YgZGF0YWJhc2UgdXNlcnNcblxuKiAqKkF1dG9tYXRlIFlvdXIgQmFja3VwcyoqICBbY29uZmlndXJlIGNsdXN0ZXIgYmFja3Vwc10oaHR0cHM6Ly9wZXJjb25hLmdpdGh1Yi5pby9wZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yL2NvbmZpZ3VyZS9vcGVyYXRvcikgdG8gcnVuIG9uIGEgc2NoZWR1bGVkIGJhc2lzLiBCYWNrdXBzIGFyZSBzdG9yZWQgb24gYSBwZXJzaXN0ZW50IHZvbHVtZS5cblxuIyMjIENvbW1vbiBDb25maWd1cmF0aW9uc1xuXG4qICoqU2V0IFJlc291cmNlIExpbWl0cyoqIC0gc2V0IGxpbWl0YXRpb24gb24gcmVxdWVzdHMgdG8gQ1BVIGFuZCBtZW1vcnkgcmVzb3VyY2VzLlxuXG4qICoqQ3VzdG9taXplIFN0b3JhZ2UqKiAtIHNldCB0aGUgZGVzaXJlZCBTdG9yYWdlIENsYXNzIGFuZCBBY2Nlc3MgTW9kZSBmb3IgeW91ciBkYXRhYmFzZSBjbHVzdGVyIGRhdGEuXG5cbiogKipDb250cm9sIFNjaGVkdWxpbmcqKiAtIGRlZmluZSBob3cgeW91ciBQWEMgUG9kcyBhcmUgc2NoZWR1bGVkIG9udG8gdGhlIEs4UyBjbHVzdGVyIHdpdGggdG9sZXJhdGlvbnMsIHBvZCBkaXNydXB0aW9uIGJ1ZGdldHMsIG5vZGUgc2VsZWN0b3IgYW5kIGFmZmluaXR5IHNldHRpbmdzLlxuKiBBdXRvbWF0aWMgc3luY2hyb25pemF0aW9uIG9mIE15U1FMIHVzZXJzIHdpdGggUHJveHlTUUxcbiogSEFQcm94eSBTdXBwb3J0XG4qIEZ1bGx5IGF1dG9tYXRlZCBtaW5vciB2ZXJzaW9uIHVwZGF0ZXMgKFNtYXJ0IFVwZGF0ZSlcbiogVXBkYXRlIFJlYWRlciBtZW1iZXJzIGJlZm9yZSBXcml0ZXIgbWVtYmVyIGF0IGNsdXN0ZXIgdXBncmFkZXNcbiogU3VwcG9ydCBtdWx0aXBsZSBQWEMgbWlub3IgdmVyc2lvbnMgYnkgdGhlIE9wZXJhdG9yXG4jIyMgQmVmb3JlIFlvdSBTdGFydFxuXG5BZGQgdGhlIFBYQyB1c2VyIGBTZWNyZXRgIHRvIEt1YmVybmV0ZXMuIFVzZXIgaW5mb3JtYXRpb24gbXVzdCBiZSBwbGFjZWQgaW4gdGhlIGRhdGEgc2VjdGlvbiBvZiB0aGUgYHNlY3JldHMueWFtbGBcbmZpbGUgd2l0aCBCYXNlNjQtZW5jb2RlZCBsb2dpbnMgYW5kIHBhc3N3b3JkcyBmb3IgdGhlIHVzZXIgYWNjb3VudHMuXG5cbkJlbG93IGlzIGEgc2FtcGxlIGBzZWNyZXRzLnlhbWxgIGZpbGUgZm9yIHRoZSBjb3JyZWN0IGZvcm1hdHRpbmcuXG5cbmBgYFxuYXBpVmVyc2lvbjogdjFcbmtpbmQ6IFNlY3JldFxubWV0YWRhdGE6XG4gIG5hbWU6IG15LWNsdXN0ZXItc2VjcmV0c1xudHlwZTogT3BhcXVlXG5kYXRhOlxuICByb290OiBjbTl2ZEY5d1lYTnpkMjl5WkE9PVxuICB4dHJhYmFja3VwOiBZbUZqYTNWd1gzQmhjM04zYjNKa1xuICBtb25pdG9yOiBiVzl1YVhSdmNnPT1cbiAgY2x1c3RlcmNoZWNrOiBZMngxYzNSbGNtTm9aV05yY0dGemMzZHZjbVE9XG4gIHByb3h5YWRtaW46IFlXUnRhVzVmY0dGemMzZHZjbVE9XG4gIHBtbXNlcnZlcjogYzNWd1lYeGVmSEJoZW5vPVxuICBvcGVyYXRvcjogYjNCbGNtRjBiM0poWkcxcGJnPT1cbmBgYFxuXG5cblxuXG5cblxuXG5cbiMjIyAgTmV3IEZlYXR1cmVzXG4qIFN1cHBvcnQgZm9yIGN1c3RvbSBzaWRlY2FyIGNvbnRhaW5lcnMgdG8gZXh0ZW5kIHRoZSBPcGVyYXRvciBjYXBhYmlsaXRpZXNcbiogQWxsb3cgdGhlIGNsdXN0ZXIgc2NhbGUgaW4gYW5kIHNjYWxlIG91dCB3aXRoIHRoZSBrdWJlY3RsIHNjYWxlIGNvbW1hbmQgb3IgSG9yaXpvbnRhbCBQb2QgQXV0b3NjYWxlclxuKiBPcGVyYXRvciBjYW4gbm93IGF1dG9tYXRpY2FsbHkgcmVjb3ZlciBQZXJjb25hIFh0cmFEQiBDbHVzdGVyIGFmdGVyIHRoZSBuZXR3b3JrIHBhcnRpdGlvbmluZ1xuIyMjIEltcHJvdmVtZW50c1xuKiBUaGUgT3BlcmF0b3IgY2FuIG5vdyBhdXRvbWF0aWNhbGx5IHJlbW92ZSBvbGQgYmFja3VwcyBmcm9tIFMzIHN0b3JhZ2UgaWYgdGhlIHJldGVudGlvbiBwZXJpb2QgaXMgc2V0ICh0aGFua3MgdG8gRGF2aSBTIEV2YW5nZWxpc3RhIGZvciByZXBvcnRpbmcgdGhpcyBpc3N1ZSlcbiogQWRkIG5hbWVzcGFjZSBzdXBwb3J0IGluIHRoZSBzY3JpcHQgdXNlZCB0byBjb3B5IGJhY2t1cHMgZnJvbSByZW1vdGUgc3RvcmFnZSB0byBhIGxvY2FsIG1hY2hpbmVcbiogUG9pbnQtaW4tdGltZSByZWNvdmVyeSB1cGxvYWRlciBub3cgY2hvb3NlcyB0aGUgUG9kIHdpdGggdGhlIG9sZGVzdCBiaW5hcnkgbG9nIGluIHRoZSBjbHVzdGVyIHRvIGVuc3VyZSBsb2cgY29uc2lzdGVuY3lcbiogQWRkIGRlYnVnIHN5bWJvbHMgZnJvbSB0aGUgcGVyY29uYS14dHJhZGItY2x1c3Rlci1zZXJ2ZXItZGVidWdpbmZvIHBhY2thZ2UgdG8gdGhlIFBlcmNvbmEgWHRyYURCIENsdXN0ZXIgZGVidWcgZG9ja2VyIGltYWdlIHRvIHNpbXBsaWZ5IHRyb3VibGVzaG9vdGluZ1xuKiBJdCBpcyBub3cgcG9zc2libGUgdG8gcmVjb3ZlciBkYXRhYmFzZXMgdXAgdG8gYSBzcGVjaWZpYyB0cmFuc2FjdGlvbiB3aXRoIHRoZSBQb2ludC1pbi10aW1lIFJlY292ZXJ5IGZlYXR1cmUuIFByZXZpb3VzbHkgdGhlIHVzZXIgY291bGQgb25seSByZWNvdmVyIHRvIHNwZWNpZmljIGRhdGUgYW5kIHRpbWVcbiogUG9pbnQtaW4tdGltZSByZWNvdmVyeSBmZWF0dXJlIG5vdyB3b3JrcyB3aXRoIGNvbXByZXNzZWQgYmFja3Vwc1xuKiBJdCBpcyBub3cgcG9zc2libGUgdG8gZXhwbGljaXRseSBzZXQgdGhlIHZlcnNpb24gb2YgUGVyY29uYSBYdHJhREIgQ2x1c3RlciBmb3IgbmV3bHkgcHJvdmlzaW9uZWQgY2x1c3RlcnMuIEJlZm9yZSB0aGF0LCBhbGwgbmV3IGNsdXN0ZXJzIHdlcmUgc3RhcnRlZCB3aXRoIHRoZSBsYXRlc3QgUFhDIHZlcnNpb24gaWYgVmVyc2lvbiBTZXJ2aWNlIHdhcyBlbmFibGVkXG4qIEFkZCBzdXBwb3J0IGZvciB0aGUgcnVudGltZUNsYXNzTmFtZSBLdWJlcm5ldGVzIGZlYXR1cmUgZm9yIHNlbGVjdGluZyB0aGUgY29udGFpbmVyIHJ1bnRpbWVcbiogVmFyaW91cyBpbXByb3ZlbWVudHMgb2YgT3BlcmF0b3IgbG9nIG1lc3NhZ2VzXG4jIyMjIEtub3duIElzc3VlcyBhbmQgTGltaXRhdGlvbnNcblNjaGVkdWxlZCBiYWNrdXBzIGFyZSBub3QgY29tcGF0aWJsZSB3aXRoIEt1YmVybmV0ZXMgMS4yMCBpbiBjbHVzdGVyLXdpZGUgbW9kZS5cblxuXG5cbiIsImRpc3BsYXlOYW1lIjoiUGVyY29uYSBYdHJhREIgQ2x1c3RlciBPcGVyYXRvciIsImljb24iOlt7ImJhc2U2NGRhdGEiOiIvOWovNEFBUVNrWkpSZ0FCQVFBQUFRQUJBQUQvMndDRUFBa0dCeE1IRUJNVEVoTVNGUklWRWhBVEVoY1lGUlVRRmhJU0Z4SVhGaFlYRmhVWUhTZ2dHQm9sR3hVVElURWhKaWtyTGk0dUZ4OHpPRE1zT0NnNUxqY0JDZ29LRGcwT0d4QVFHeTBsSUNNM0x5MHRMU3N0TFRBdE1TOHROeTB0TFMwdkxTMHRMekF0TFMwdExTOHRMeTB0TFMwdExTMHRMUzR0TFMwdExTMHRMZi9BQUJFSUFPQUE0QU1CRVFBQ0VRRURFUUgveEFBY0FBRUFBZ0lEQVFBQUFBQUFBQUFBQUFBQUJnY0JCUUlEQkFqL3hBQkJFQUFDQVFFRUJnVUpCd0lHQXdBQUFBQUFBUUlEQkFVUkV3WVNJVEZCVVFkaGNZR1JGREkxVW5PU3NiUEJGU0lqUW5LaDBXS0NNMU9pc3NMaEZqUkQvOFFBR2dFQkFBTUJBUUVBQUFBQUFBQUFBQUFBQUFRRkJnTUJBdi9FQURVUkFRQUJBd0lDQmdvQ0FRVUJBQUFBQUFBQkFnTVJCQVVoTVJKQlVYR1JzUk1pTWpNMFlZR2gwZUhCOEVJVUl5Unk4WUwvMmdBTUF3RUFBaEVERVFBL0FMeEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQTRWYWlvckdUU1M0dDRJK2E2NmFJelZPSWUwMHpWT0locUxWcEpUcGJJSnpmdXg4WC9CVlh0NHRVY0xjZEtmQ1BIOUoxdmI3bFh0Y0dycjZSVmFtN1ZqMkxGK0xLMjV1Mm9xOW5FZmRNbzBGcU9lWmVPcGVkV3B2cVQ4Y1BnUks5WHFLK2RjK09QSjNqVDI0NVV3NlpXaHkzeWsrOW5DYXFwNXpQakw3aWlJNmlOb2xIZEtTNzJJcXFqbE0rTWswUlBVN3FkNTFhZTZwUHh4K0ozbzFlb281Vno0NTgzeE9udHp6cGg3S0drVldudjFaZHF3ZmlpWGIzYlVVKzFpZnM0VjZDMVBMTU5wWmRKS2RYWk5PRDk2UGl2NExLeHZGcXZoY2pvejR4NC9wRHViZmNwOW5pMjlLb3F5eGkwMCtLZUtMV2l1bXVNMHptRUdxbWFaeE1PWjlQQUFBQUFBQUFBQUFBQUFBQUFBYmdJOWVtazBhR01hV0U1Y1pmbFhaNnhVYXJkYWFQVnRjWjdlcjlyS3h0OVZYRzV3anM2LzBqTnF0czdXOWFjbko4TWR5N0Z3S0c3ZHJ2VmRLNU9WcmJ0VTI0eFRHSFZtSFBEN3daZ3dZTXdZTUdZTUdETUdEQm1EQmd6Qmd3Wmd3WWR0bHRzN0k5YUVuRjhjTno3VnhPbHE3WFpxNlZ1Y1BpNWFwdVJpcU1wTmRlazBhK0VhdUVKY0pmbGZiNnBmYVhkYWEvVnU4SjdlcjlLcS90OVZQRzN4anM2LzJrTzh0MWFBQUFBQUFBQUFBQUFBQUFkZGV0R3p4Y3BOS0tXTGIySkkrYTY2YUltcXFjUkQ2cHBtcWVqVEhGQmI4MGhsZUxjWVl4cGN0em4rcmt1b3ptczExVi93QlduaFQ1OS80WDJsMFZOcjFxdU5YazArWVYrRTNCbURCZ3pCZ3daZ3dZTXdZTUdZTUdETUdEQm1EQmd6Qmd3Wmd3WU13WU1HWU1HRzR1UFNHVjNOUm5qS2x5M3VINmVhNml3MGV1cXNlclZ4cDh1NzhJV3EwVk4zMXFlRlhtblZDdEcwUlVvdE9MV0thMnBvMGRGZE5jUlZUT1lsUTFVelRQUnFqaTdENmZJQUFBQUFBQUFBQUFPTlNhcHB0dEpKTnR2WWtrZVRNUkdaZXhFek9JVnhwSGZ6dmFlRWNWUmkvdXIxbjYwdm91Qm05WnFwdjFZajJZNWZQNXRIbzlKRmluTSsxUFA4TlJtRUxDWmd6Qmd3Wmd3WU13WU1HWU1HRE1HREREcXBjUndlOUVWVlBpT0IwV2N3WWVZTXdZTUdZTUdETUdEQm1EQmd6Qmd3MitqbC9PNlo0U3hkR1QrOHZWZnJSK3E0azNSNnFiRldKOW1lZnkrYUhyTkpGK25NZTFITDhMSHB6VlJKcHBwcE5OYlUwelNSTVRHWVp5WW1KeExrZXZBQUFBQUFBQUFBQWd1bmQrYTB2Sm9QWXNIV2ZONzFENnZ1S2ZjZFJuL2FwK3Y0WG0yYVhFZW1xK241UTdNS25DM3daZ3c5d1pnd1lNd1lNRHFZREJoSWJvMFVyM2lsS1g0VUh4a3NaTmRVUDVKdG5iN2x6alBDUHY0SysvdUZxMXdqMXArWEx4U3F4YUlXYXplZEdWUjg1dlo3cTJGbmIyNnpUempQZXFybTVYNitVNDdtMXBYWFJvK2JTcHIreVA4RW1MRnVPVk1lQ0xWZnUxYzZwOFNyZGRDdDUxS20vN0kvd0pzVzU1MHg0Rk4rN1R5cW54YXEyNkgyYTArYXBVM3ppOW51dllSYm0zV2F1VVk3a3UzdVYram5PZTlGTDMwVnIzY25LUDRzRnZjVmhKTHJodC9iRXJiMjMzTGZHT01mTDhMU3h1RnE3d24xWitmNVI5Vk1TRmhZWU13WU1HWU1HRE1HREJtRER6Q1k2Q1g1cXk4bW05anhkRjhudmNQcXU4dHR1MUdQOEFhcStuNFZHNTZYTWVtcCt2NVRvdUZHQUFBQUFBQUFBTmJwRGVpdWV6enE3RzBzSUxuTjdJcnhPTis3NkszTlNScGJFMzdzVWVQY3A2Vlp6YmNuakp0dVRlOXR2RnZ4TTNQSGpMWFJURVJpR013WU1HWU1HRE1HRERsVHhxeVVZcHlsSnBSUzJ0dDdrajJLWm1jUThuRVJtZVN5dEZ0RkkzYWxVcllUcmJHdU1hWFZIbSt2d0xyUzZLbTM2MVhHZkpuZGJ1RlYzMUtPRlBuL2V4S0NlckFBQUFBQUl0cFRvbkc4VTZ0SENOYmEydDBhdmJ5bDErSkExV2lpNTYxSENmTlo2TGNKdGVwYzQwK1N0YWpkTnVNazFKTnFTZXhwcmVtaWttbVluRXRIR0pqTU1aZ3dZTXdZTUdZTUdHWTFuQnB4ZUVrMDR0YjAwOFUxM2lPSEdDYVltTVN1SFI2OUZmRm5oVjJKdFlUWEthMlNYaWFTeGQ5TGJpcGtkVllteGRtanc3bXlPeU9BQUFBQUFBQVZwMG5YcG0xNmRCUDd0T092THJuTFl2Q09QdkZUdUZlYW9vN0dpMmV4aTNOeWV2aDlJL3YyUXpNSy9DNHdaZ3dZTXdZTUdZTUdGazlIbHdlVDAxYWFpL0VtdndrL3lVM3g3WmZEQXR0RnArakhUcTV5enU2YXZwVmVocDVSeitjL3BOU3dVNEJodkE4bVlqakp6ZVNwZWxHbnZxUjd0dndJbGU0YWFqaE5jSkZPbHUxY3FXS2Q3VVovOEEwajM3UGllVTdqcHF1VmNFNlc5SCtMMlJrcExGUEZlSk1pWW1NdzRURXh3bGs5ZUFFSTZSTGd6NE8xVTE5K0MvRlMvUFRYNXUyUHc3Q3YxMm42VWVrcDV4elhPMWF2bzFlaHI1VHkrVS90WEdZVk9HaHdaZ3dZTXdZTUdZTUdFejZNYjB5cTFTZzM5MnBIWGgxVGpzZmpIRDNTdzIrdkZVMGRxbjNpeG0zRnlPcmg5Si92M1dXV3pPZ0FBQUFBQUFGQlh6ZVAybGFLMVhoT3BKeC9TbmhIOWtpZ3VWZE91YXUxdDdGbjBWcW1qc2ovMTQ4dzU0ZHNHWU1HRE1HRERiYUxYWjl0MnVuU2ZtWXVkVDJjZHJYZnNYZWRyRnIwbGNRaTZ5L3dDZ3N6WEhQbEhldkpMRGNYckdNZ2VPOHJ3allJNHZiSitiSG4vQ0llczF0R21welBHWjVSL2VwM3NhZXE3T0k1ZGNvdGJMYk8ydjc3MmNGdWl1NHltcDFWM1VUbTVQRHM2dkJkV3JORnFQVmo2OWJ6RWQxWkE3ckphcDJSNHdlSE5jSDJvN1dOUmNzVG0zT1BMd2M3bHFpNUdLb1NpNjd5amIxeW10NitxNmpWYUhYMDZtbnNxam5INFUybzAwMnA3WWU4bm96RWxyTEI3VTlqNjBDSndvdlNhN2ZzUzFWS0s4MVBXcCt6bHRpdTdhdTRvcjlyMGRjMHRwcEwvcDdNVjlmWDN0WG1ISENUZ3pCZ3daZ3dZZXk1cngremJSUnE4SVZJdVg2Y2NKZnMyZExkWFFyaXJzY2I5bjB0cXFqdGovQU1YNlg3RUFBQUFBQUFOZHBEYXZJckpYcWVyUnFOZHVxOEQ0dVRpaVpkOUxSMDcxTlBiTVBueUV0Ukpja2tVZUc2bmpPWExYR0htRFhHREJyakJoWkhRN1pOYnltdStkT2pIdVRuUC9BSFE4Q3cwTkhPcG45OXVleGI3NS9pUEtWbEU5bjNHclVWS0xrOXlUYjdFZk5kY1VVelZWeWg3VFROVTRoQ3JYYVhhNXVjdU81Y2x3UmlOUmZxdjNKdVZkZjJqc2FHMWJpM1RGTU9rNHVnQUFBYzZGWjJlU2xIZW5pdjRmVWZkcTdWYXJpdWpuRDRyb2l1bWFaNVNtdG1ySzBRakpibWt6YjJic1hiY1YwOHBaKzVSTkZVMHoxTzA2dmhXZlRGWk5SMmFzdU9aUmw0S2NQaFU4U0JyYU9WVFE3RmN6RmR2dW4rSi9oWE91VitGL2cxeGd3YTR3WWNaeTFrMXpUUXc5amhPWDBKbzlhdkxiSlFxZXRScHQ5dXFzUzh0em1pSllYVTBkQzlWVDJUTFlIMjRBQUFBQUFSM3BEbnFYWmF2Wk5lTFNPVi8zY3ArMlJuVlVkNmhjd3FjTnBnekJnd1pnd1lNd1lNTG42STRhdDNLWHJWcXo4SmF2MExMU3hpMnlXOVQvQU1ySFpFSnFTVlMxbWtWWExvTmVzNHgrdjBLemQ3blIwMHgyNGhNME5PYnVleEZUSnJvQUFBQUFDUzZNMWRhbEtQcXlmZzFqL0pwdGx1ZEt6TlBaUG54Vkc0VTR1UlBiRGNGeWdJUjB2UTFydng5V3ZSZmkzSDZrYlZSbTJ0OWtuL2s0N1lsVFdZVnVHc3daZ3dZTXdZTUdZTUdGOWRIczllN0xMN0pMd2JSYldQZHd4VzV4alYxOTZSSFZCQUFBQUFBam5TSkRYdXUxZFZKdndhT1Y3M2NwMjJUalZVZDc1L0t0dHdBQUF2SG9sOUYwL2FWL21Nc3RON3RqOTUrTG51anlUSTdxcHFkSlk0MFYxVGo5VjlTbzNxTTZmUFpNSjJnbi9kK2lNR1hYQUFBQUFBRWkwV2poQ2I1eVM4Ri8yYVBZNmY4QWJycStmbENxM0dmV3BodXk4VnlEZE1WYkx1NUwxNjlKTHV4bC93QVdSOVZQcUxqWktjNm5QWkVxVks1clFBQUErZ09qeUdwZGRsOWtuNHRscFo5M0RFYm5PZFZYM3BHZFVFQUFBQUFEVzZTV1h5MngyaW42MUdxbDI2cncvYytLNHpUTU8rbHI2RjZpcnNtSHpiRjRwZGlLbHZwWkFBQUx4NkpmUmRQMmxmNWpMTFRlN1kvZWZpNTdvOGt5TzZxZWUzMmZ5cW5LSE5iTzNnUjlWWjlOYXF0OXJyWnVlanJpcENtbkhZMWcxc2E1UGlZaVltT0U4Mmd6RThZQTlBQUFEQUV6dXF6ZVNVb3hlL2ZMdGUwMm1oc2Vnc1UwVHo1ejN5b05UYzlKY21xSHJKYmdxbnBydCt0T3pVRTl5cVZaOXJ3akQvbVF0WFZ5aHBOaHRZaXU1UHlqK1ovaFdSRGFFQUFZazhFK3hnaDlKYU4yWHlLeDJlbjZ0R2tuMjZxeC9jdHFJeFRFTURxcStuZXJxN1psc2o3Y0FBQUFBQUFIelhmOTMvWk5xcjBlRk9yTlIvUTNqRC9TMFZOZFBScW1HKzAxMzAxbW01Mng5K3Q0RDRkd0FCZVBSTDZMcCswci9NWlphYjNiSDd6OFhQZEhrbVIzVlFCbzc4dXAxWG1VMWkvelI1OWE2eWkzUGJwcm4wdHFPUFhIYjg0K2Ztc2RKcW9wam9WOHVxVWRNNnRXUUFHSHNQQnZyanVwNHFwVVdHRzJFWHZ4NXN2OXMyNmN4ZXV4M1IvTS93QUszVjZxTWRDajZ5a0JvVlc0MUtpcFJjcE5LS1RiYjJKSkxGdGg3RVRNNGg4NTZVWHc3K3RkV3Z0MVpTd3BwOEtVZGtQMjI5NVZYSytuVk10M3BOUC9BS2V6VGI2NDU5L1cxUnpTUUFCNzdndS83V3RWQ2p3cVZZS1g2RThaL3dDbE0rNktlbFZFT0dwdStoczFYT3lQdjFQcFF0bUJBQUFBQUFBQUtnNlpicDhudEZLMHhYM2FzY3ViNVZJYlk0OXNXL2RaQjFWR0ppcHFOanY5SzNWYW5xNHgzVC9mdXJzaUwwQUFYajBTK2k2ZnRLL3pHV1dtOTJ4KzgvRnozUjVKa2QxVUFBUERiYnFwMnphMWhMMWxzZmZ6SU9wMit6ZjQxUmllMkVpMXFybHZoSExzbHE2bWprbDV0Uk5kY1d2Z3lxcjJPdlBxMXg5WS9hYlR1TlBYVDkySWFPU2UrcEZka1cvaXp5blk3bWZXcmo2Uit5ZHhwNnFaYk94WFJUc3J4dzFwYzViY094YmtXbW0yeXhZbk9NejJ5aVhkWGN1Y09VZkpzQ3dSUUNzZWxqU3RRaTdGUmFjcGYrekpmbGp2Vk5kYjN2a3UwaDZtNy9oSDFhSFp0RG1mVDEvL0FEK1ZWRUpwQUFBQXNUb2F1bnlpMFZiVEpmZHBSeTRQblVudGxoMlJTOTVFdlMwWm1hbEZ2bC9vMjZiVWRmR2U2UDc5bHZrNWx3QUFBQUFBQURUNldYS3RJTEpVb1BCU2F4cHQvbHFSMnhmajhUNHVVZE9uQ1ZvOVRPbnZSYzhlNTg3Vktib3lsR1NjWlJrNHlUM3hrbmcwK3hwbFZNWWJxSmlZekhLWEU4ZWdGNDlFdm91bjdTdjh4bGxwdmRzZnZQeGM5MGVTWkhkVk9pMTJ5bllvcVZTY1lSY294VGs4RnJTZUVWajFzOG1Zam0rNkxkVmM0cGpMdlBYd0FBQUFBQlhlblBTSkN4S1ZDeHlVNnp4VTZxMndwZnA0U24reUl0N1VSSENubXZkdjJtcXVZdVhveFQyZGMvaUZReWs1dHR0dHR0dHQ0dHQ3VzIrTElEVHhHT0VNQjZBQU9WT202MG94aW5LVXBLTVV0OHBONEpMdGJSN0VaZVRNUkdaNVEraWRFN2xXajlrcDBGZzVKWTFHdnpWSmJaUHgrQmEyNk9oVGhoZFpxWjFGNmJuaDNOd2ZhS0FBQUFBQUFBQUtvNlc5RjNUbDViU2o5MTRLMEpjSHVqVTdPRDdpRnFiWCtjTkxzdXR6SG9LNS93Q3Y0L0NzaUcwSUJlWFJMNkxwKzByL0FER1dXbTkyeDI5ZkZ6M1I1SmtkMVVodlMxNkxxZTBvZk1SdzFQdTFyczN4Y2QwK1N0Tkc5T3JYY0NVRkpWYVN3U3AxRzNxcmxHVytQWnRSRHQzNnFPRFFhcmJMR29ucFRHSjdZL21GZzNWMHFXUzFKWjBhbENYSEZac01lcWNmcWtTcWRWUlBQZ283MnlYNlBZbUtvOEo4Ry9vNlpXQ3Z1dFZIdmxnLzNPc1hhSjYwS3JiOVRUem9rcjZaV0NodnRWSHVsclB3UW03UkhXVTdmcWF1VkVvL2V2U3BaTEtua3hxVjVjTUZsUTc1UzIrQ1p5cTFWRWN1S2RaMk8vWDdjeFRIalBncjdTVFRtMTMrbkNVbFNvdkZPblR4U2t1VTViNWRteEVXNWZxcjRMdlM3WlkwODlLSXpQYlA4SXp1T0t4QUFBQUJadlJKb3U2a3ZMYXNmdXJGV2RQaTkwcW5ad1hlVE5OYS93QTUralBiMXJjUjZDaWYrMzQvSzF5YXpRQUFBQUFBQUFBQWNLdEpWb3VNa25HU2FrbnRUVDJOTkRtOWlacG5NS0swODBQbG96VTFvWXlzMDI4dDczVGYrWEovQjhlMHJiMW5vVG1PVFpiZHVFYW1uRlh0UnorZnovS0puQlpyeTZKZlJkUDJsZjVqTExUZTdZN2V2aTU3bzhreU82cVEzcGE5RjFQYVVQbUk0YW4zYTEyYjR1TzZmSlJwV3RpQUFBQUFBQUFBQUVyMEQwUGxwTlUxcDR4czBHc3g3blVmK1hGL0Y4TzA3MmJQVG5NOGxadU80UnBxY1UrMVBMNWZQOEwycFVsUmlveFNVWXBLS1d4SkxZa2tXVWNHTm1acW5NdVllQUFBQUFBQUFBQUFBNmJaWllXMm5LblVpcHdrbXBSYXhUUjVNUk1ZbDkwVjFVVlJWVE9KaFNtbStnbFRSOXVyUzFxbG0ydkhmS2l1VStjZjZ2SG1WOTZ4TkhHT1RXN2Z1bEdveFJYd3E4Kzc4Si8wU2VpNmZ0Sy96R1N0Tjd0U2IxOFhQZEhrbVIzVlNHOUxYb3VwN1NoOHhIRFUrN1d1emZGeDNUNUtOSzFzUUFBQUFBQUFBQk05Q05CS21rRFZXcnJVN05zZU82Vlpjb2NvL3dCWGh6SkZteE5mR2VTcDNEZEtOUG1pampWNWQvNFhYWTdMQ3cwNDA2Y1ZDRVVsR0tXQ1NMQ0lpSXhESlYxMVYxVFZWT1psM0hyNEFBQUFBQUFBQUFBQUFBWWF4QTg5Z3NGTzdvT0ZLQ2hEV2xMVld4SnllTHdYRGFlUlRFY0lkTGwydTVQU3JuTXZTZXVhRzlMWG91cDdTaDh4SERVKzdXdXpmRngzVDVLTksxc1FBQUFBQUFIdHVpNmExOHoxTFBUbFVsc3h3ODJQWEtXNko5VTBUVk9JY2IxKzNacDZWeWNMVjBVNk1xVmdhcVd0eHJWTmpWTkw4S0Q2OGZQZmJndW9tMjlORWNhdUxONnplYTducTJmVmp0Ni8wc0ZMQWxLTmtBQUFBQUFBQUFBQUFBQUFBQUFBTlBwWmNYL2tkbGxRMTh2V2NKS1dycjRPTXNWc3hXTzdtYzdsSFRwd2xhUFUvd0NtdXhjeGxWVjQ5Rjl0c3Y4QWh1bFdYVkowMzdzdjVJZFdscmprMGxyZTlQVjdXWSs2UDJyUmUyMlR6N0xYL3RnNmk4WVluS2JWY2RTZFJydE5YeXJqeHg1dGZVc2RTbDUxS3F1Mm5OZkZIeDBaN0hlTGxFOHFvOFlLZGpxVmZOcFZYMlU1djRJZEdld201UkhPcVBHR3dzdWk5dHRmbVdXdjN3ZE5lTThEN2kxWFBVNFY2M1RVYzY0OGMrU1FYZDBYMjIxZjRqcFVWL1ZKemZ1eC9rNjA2YXVlYURkM3ZUMCt6bVV3dWJvc3N0aXdsWGxPMFM1UDhPbjdpZUw3Mnp2UnBhWTU4VlhmM3U5WHd0eDBZOFo4ZjBtOWtzc0xIQlFwd2pDQzNSaWxGTHVSSWlJamhDbnJycXJucFZUbVhjZXZrQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUIvL1oiLCJtZWRpYXR5cGUiOiJpbWFnZS9wbmcifV0sImluc3RhbGwiOnsic3BlYyI6eyJkZXBsb3ltZW50cyI6W3sibmFtZSI6InBlcmNvbmEteHRyYWRiLWNsdXN0ZXItb3BlcmF0b3IiLCJzcGVjIjp7InJlcGxpY2FzIjoxLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJuYW1lIjoicGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvciJ9fSwidGVtcGxhdGUiOnsibWV0YWRhdGEiOnsibGFiZWxzIjp7Im5hbWUiOiJwZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yIn19LCJzcGVjIjp7ImNvbnRhaW5lcnMiOlt7ImNvbW1hbmQiOlsicGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvciJdLCJlbnYiOlt7Im5hbWUiOiJXQVRDSF9OQU1FU1BBQ0UiLCJ2YWx1ZUZyb20iOnsiZmllbGRSZWYiOnsiZmllbGRQYXRoIjoibWV0YWRhdGEubmFtZXNwYWNlIn19fSx7Im5hbWUiOiJQT0RfTkFNRSIsInZhbHVlRnJvbSI6eyJmaWVsZFJlZiI6eyJmaWVsZFBhdGgiOiJtZXRhZGF0YS5uYW1lIn19fSx7Im5hbWUiOiJPUEVSQVRPUl9OQU1FIiwidmFsdWUiOiJwZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yIn1dLCJpbWFnZSI6InBlcmNvbmEvcGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvcjoxLjguMCIsImltYWdlUHVsbFBvbGljeSI6IkFsd2F5cyIsIm5hbWUiOiJwZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yIiwicG9ydHMiOlt7ImNvbnRhaW5lclBvcnQiOjYwMDAwLCJuYW1lIjoibWV0cmljcyJ9XX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJwZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yIn19fX1dLCJwZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyJweGMucGVyY29uYS5jb20iXSwicmVzb3VyY2VzIjpbInBlcmNvbmF4dHJhZGJjbHVzdGVycyIsInBlcmNvbmF4dHJhZGJjbHVzdGVycy9zdGF0dXMiLCJwZXJjb25heHRyYWRiY2x1c3RlcmJhY2t1cHMiLCJwZXJjb25heHRyYWRiY2x1c3RlcmJhY2t1cHMvc3RhdHVzIiwicGVyY29uYXh0cmFkYmNsdXN0ZXJyZXN0b3JlcyIsInBlcmNvbmF4dHJhZGJjbHVzdGVycmVzdG9yZXMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsicG9kcyIsInBvZHMvZXhlYyIsInBvZHMvbG9nIiwiY29uZmlnbWFwcyIsInNlcnZpY2VzIiwicGVyc2lzdGVudHZvbHVtZWNsYWltcyIsInNlY3JldHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGVwbG95bWVudHMiLCJyZXBsaWNhc2V0cyIsInN0YXRlZnVsc2V0cyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyJiYXRjaCJdLCJyZXNvdXJjZXMiOlsiam9icyIsImNyb25qb2JzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbInBvbGljeSJdLCJyZXNvdXJjZXMiOlsicG9kZGlzcnVwdGlvbmJ1ZGdldHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiY2VydG1hbmFnZXIuazhzLmlvIiwiY2VydC1tYW5hZ2VyLmlvIl0sInJlc291cmNlcyI6WyJpc3N1ZXJzIiwiY2VydGlmaWNhdGVzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIiwiZGVsZXRlY29sbGVjdGlvbiJdfV0sInNlcnZpY2VBY2NvdW50TmFtZSI6InBlcmNvbmEteHRyYWRiLWNsdXN0ZXItb3BlcmF0b3IifSx7InJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyIiXSwidmVyYnMiOlsiIl19XSwic2VydmljZUFjY291bnROYW1lIjoicGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvci13b3JrbG9hZCJ9XSwic3BlYyI6eyJkZXBsb3ltZW50cyI6W10sInBlcm1pc3Npb25zIjp7ImFwaVZlcnNpb24iOiJyYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEiLCJraW5kIjoiUm9sZSIsIm1ldGFkYXRhIjp7Im5hbWUiOiJwZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsicHhjLnBlcmNvbmEuY29tIl0sInJlc291cmNlcyI6WyJwZXJjb25heHRyYWRiY2x1c3RlcnMiLCJwZXJjb25heHRyYWRiY2x1c3RlcnMvc3RhdHVzIiwicGVyY29uYXh0cmFkYmNsdXN0ZXJiYWNrdXBzIiwicGVyY29uYXh0cmFkYmNsdXN0ZXJiYWNrdXBzL3N0YXR1cyIsInBlcmNvbmF4dHJhZGJjbHVzdGVycmVzdG9yZXMiLCJwZXJjb25heHRyYWRiY2x1c3RlcnJlc3RvcmVzL3N0YXR1cyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbInBvZHMiLCJwb2RzL2V4ZWMiLCJwb2RzL2xvZyIsImNvbmZpZ21hcHMiLCJzZXJ2aWNlcyIsInBlcnNpc3RlbnR2b2x1bWVjbGFpbXMiLCJzZWNyZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbImRlcGxveW1lbnRzIiwicmVwbGljYXNldHMiLCJzdGF0ZWZ1bHNldHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiYmF0Y2giXSwicmVzb3VyY2VzIjpbImpvYnMiLCJjcm9uam9icyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSJdfSx7ImFwaUdyb3VwcyI6WyJwb2xpY3kiXSwicmVzb3VyY2VzIjpbInBvZGRpc3J1cHRpb25idWRnZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbImNlcnRtYW5hZ2VyLms4cy5pbyIsImNlcnQtbWFuYWdlci5pbyJdLCJyZXNvdXJjZXMiOlsiaXNzdWVycyIsImNlcnRpZmljYXRlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giLCJjcmVhdGUiLCJ1cGRhdGUiLCJwYXRjaCIsImRlbGV0ZSIsImRlbGV0ZWNvbGxlY3Rpb24iXX1dLCJzZXJ2aWNlQWNjb3VudE5hbWUiOiJwZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yIn19LCJzdHJhdGVneSI6ImRlcGxveW1lbnQifSwic3RyYXRlZ3kiOiJkZXBsb3ltZW50In0sImluc3RhbGxNb2RlcyI6W3sic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiT3duTmFtZXNwYWNlIn0seyJzdXBwb3J0ZWQiOnRydWUsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjpmYWxzZSwidHlwZSI6IkFsbE5hbWVzcGFjZXMifV0sImtleXdvcmRzIjpbIm15c3FsIiwicGVyY29uYSIsImRhdGFiYXNlIiwicHhjIiwiZ2FsZXJhIl0sImxhYmVscyI6e30sImxpbmtzIjpbeyJuYW1lIjoiUGVyY29uYSIsInVybCI6Imh0dHBzOi8vd3d3LnBlcmNvbmEuY29tLyJ9LHsibmFtZSI6IlBlcmNvbmEgS3ViZXJuZXRlcyBPcGVyYXRvcnMgTGFuZGluZyBQYWdlIiwidXJsIjoiaHR0cHM6Ly93d3cucGVyY29uYS5jb20vc29mdHdhcmUvcGVyY29uYS1rdWJlcm5ldGVzLW9wZXJhdG9ycyJ9LHsibmFtZSI6IkRvY3VtZW50YXRpb24iLCJ1cmwiOiJodHRwczovL3BlcmNvbmEuZ2l0aHViLmlvL3BlcmNvbmEteHRyYWRiLWNsdXN0ZXItb3BlcmF0b3IvIn0seyJuYW1lIjoiR2l0aHViIiwidXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL3BlcmNvbmEvcGVyY29uYS14dHJhZGItY2x1c3Rlci1vcGVyYXRvciJ9XSwibWFpbnRhaW5lcnMiOlt7ImVtYWlsIjoiaW5mb0BwZXJjb25hLmNvbSIsIm5hbWUiOiJQZXJjb25hIn1dLCJtYXR1cml0eSI6InN0YWJsZSIsIm1pbkt1YmVWZXJzaW9uIjoiIiwicHJvdmlkZXIiOnsibmFtZSI6IlBlcmNvbmEifSwicmVwbGFjZXMiOiJwZXJjb25hLXh0cmFkYi1jbHVzdGVyLW9wZXJhdG9yLnYxLjcuMCIsInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7fX0sInZlcnNpb24iOiIxLjguMCJ9fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIsImtpbmQiOiJDdXN0b21SZXNvdXJjZURlZmluaXRpb24iLCJtZXRhZGF0YSI6eyJuYW1lIjoicGVyY29uYXh0cmFkYmJhY2t1cHMucHhjLnBlcmNvbmEuY29tIn0sInNwZWMiOnsiYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJKU09OUGF0aCI6Ii5zcGVjLnB4Y0NsdXN0ZXIiLCJkZXNjcmlwdGlvbiI6IkNsdXN0ZXIgbmFtZSIsIm5hbWUiOiJDbHVzdGVyIiwidHlwZSI6InN0cmluZyJ9LHsiSlNPTlBhdGgiOiIuc3RhdHVzLnN0b3JhZ2VOYW1lIiwiZGVzY3JpcHRpb24iOiJTdG9yYWdlIG5hbWUgZnJvbSBweGMgc3BlYyIsIm5hbWUiOiJTdG9yYWdlIiwidHlwZSI6InN0cmluZyJ9LHsiSlNPTlBhdGgiOiIuc3RhdHVzLmRlc3RpbmF0aW9uIiwiZGVzY3JpcHRpb24iOiJCYWNrdXAgZGVzdGluYXRpb24iLCJuYW1lIjoiRGVzdGluYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0seyJKU09OUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJkZXNjcmlwdGlvbiI6IkpvYiBzdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiSlNPTlBhdGgiOiIuc3RhdHVzLmNvbXBsZXRlZCIsImRlc2NyaXB0aW9uIjoiQ29tcGxldGVkIHRpbWUiLCJuYW1lIjoiQ29tcGxldGVkIiwidHlwZSI6ImRhdGUifSx7IkpTT05QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJncm91cCI6InB4Yy5wZXJjb25hLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJQZXJjb25hWHRyYURCQmFja3VwIiwibGlzdEtpbmQiOiJQZXJjb25hWHRyYURCQmFja3VwTGlzdCIsInBsdXJhbCI6InBlcmNvbmF4dHJhZGJiYWNrdXBzIiwic2hvcnROYW1lcyI6W10sInNpbmd1bGFyIjoicGVyY29uYXh0cmFkYmJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9uIjoidjFhbHBoYTEiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxYWxwaGExIiwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIsImtpbmQiOiJDdXN0b21SZXNvdXJjZURlZmluaXRpb24iLCJtZXRhZGF0YSI6eyJuYW1lIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJiYWNrdXBzLnB4Yy5wZXJjb25hLmNvbSJ9LCJzcGVjIjp7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siSlNPTlBhdGgiOiIuc3BlYy5weGNDbHVzdGVyIiwiZGVzY3JpcHRpb24iOiJDbHVzdGVyIG5hbWUiLCJuYW1lIjoiQ2x1c3RlciIsInR5cGUiOiJzdHJpbmcifSx7IkpTT05QYXRoIjoiLnN0YXR1cy5zdG9yYWdlTmFtZSIsImRlc2NyaXB0aW9uIjoiU3RvcmFnZSBuYW1lIGZyb20gcHhjIHNwZWMiLCJuYW1lIjoiU3RvcmFnZSIsInR5cGUiOiJzdHJpbmcifSx7IkpTT05QYXRoIjoiLnN0YXR1cy5kZXN0aW5hdGlvbiIsImRlc2NyaXB0aW9uIjoiQmFja3VwIGRlc3RpbmF0aW9uIiwibmFtZSI6IkRlc3RpbmF0aW9uIiwidHlwZSI6InN0cmluZyJ9LHsiSlNPTlBhdGgiOiIuc3RhdHVzLnN0YXRlIiwiZGVzY3JpcHRpb24iOiJKb2Igc3RhdHVzIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifSx7IkpTT05QYXRoIjoiLnN0YXR1cy5jb21wbGV0ZWQiLCJkZXNjcmlwdGlvbiI6IkNvbXBsZXRlZCB0aW1lIiwibmFtZSI6IkNvbXBsZXRlZCIsInR5cGUiOiJkYXRlIn0seyJKU09OUGF0aCI6Ii5tZXRhZGF0YS5jcmVhdGlvblRpbWVzdGFtcCIsIm5hbWUiOiJBZ2UiLCJ0eXBlIjoiZGF0ZSJ9XSwiZ3JvdXAiOiJweGMucGVyY29uYS5jb20iLCJuYW1lcyI6eyJraW5kIjoiUGVyY29uYVh0cmFEQkNsdXN0ZXJCYWNrdXAiLCJsaXN0S2luZCI6IlBlcmNvbmFYdHJhREJDbHVzdGVyQmFja3VwTGlzdCIsInBsdXJhbCI6InBlcmNvbmF4dHJhZGJjbHVzdGVyYmFja3VwcyIsInNob3J0TmFtZXMiOlsicHhjLWJhY2t1cCIsInB4Yy1iYWNrdXBzIl0sInNpbmd1bGFyIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJiYWNrdXAifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwic3VicmVzb3VyY2VzIjp7InN0YXR1cyI6e319LCJ2ZXJzaW9uIjoidjEiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxIiwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlfV19fQ==
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIsImtpbmQiOiJDdXN0b21SZXNvdXJjZURlZmluaXRpb24iLCJtZXRhZGF0YSI6eyJuYW1lIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJyZXN0b3Jlcy5weGMucGVyY29uYS5jb20ifSwic3BlYyI6eyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7IkpTT05QYXRoIjoiLnNwZWMucHhjQ2x1c3RlciIsImRlc2NyaXB0aW9uIjoiQ2x1c3RlciBuYW1lIiwibmFtZSI6IkNsdXN0ZXIiLCJ0eXBlIjoic3RyaW5nIn0seyJKU09OUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJkZXNjcmlwdGlvbiI6IkpvYiBzdGF0dXMiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiSlNPTlBhdGgiOiIuc3RhdHVzLmNvbXBsZXRlZCIsImRlc2NyaXB0aW9uIjoiQ29tcGxldGVkIHRpbWUiLCJuYW1lIjoiQ29tcGxldGVkIiwidHlwZSI6ImRhdGUifSx7IkpTT05QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJncm91cCI6InB4Yy5wZXJjb25hLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3RlclJlc3RvcmUiLCJsaXN0S2luZCI6IlBlcmNvbmFYdHJhREJDbHVzdGVyUmVzdG9yZUxpc3QiLCJwbHVyYWwiOiJwZXJjb25heHRyYWRiY2x1c3RlcnJlc3RvcmVzIiwic2hvcnROYW1lcyI6WyJweGMtcmVzdG9yZSIsInB4Yy1yZXN0b3JlcyJdLCJzaW5ndWxhciI6InBlcmNvbmF4dHJhZGJjbHVzdGVycmVzdG9yZSJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX0sInZlcnNpb24iOiJ2MSIsInZlcnNpb25zIjpbeyJuYW1lIjoidjEiLCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMSIsImtpbmQiOiJDdXN0b21SZXNvdXJjZURlZmluaXRpb24iLCJtZXRhZGF0YSI6eyJuYW1lIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJzLnB4Yy5wZXJjb25hLmNvbSJ9LCJzcGVjIjp7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siSlNPTlBhdGgiOiIuc3RhdHVzLmhvc3QiLCJuYW1lIjoiRW5kcG9pbnQiLCJ0eXBlIjoic3RyaW5nIn0seyJKU09OUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiSlNPTlBhdGgiOiIuc3RhdHVzLnB4Yy5yZWFkeSIsImRlc2NyaXB0aW9uIjoiUmVhZHkgcHhjIG5vZGVzIiwibmFtZSI6IlBYQyIsInR5cGUiOiJzdHJpbmcifSx7IkpTT05QYXRoIjoiLnN0YXR1cy5wcm94eXNxbC5yZWFkeSIsImRlc2NyaXB0aW9uIjoiUmVhZHkgcHJveHlzcWwgbm9kZXMiLCJuYW1lIjoicHJveHlzcWwiLCJ0eXBlIjoic3RyaW5nIn0seyJKU09OUGF0aCI6Ii5zdGF0dXMuaGFwcm94eS5yZWFkeSIsImRlc2NyaXB0aW9uIjoiUmVhZHkgaGFwcm94eSBub2RlcyIsIm5hbWUiOiJoYXByb3h5IiwidHlwZSI6InN0cmluZyJ9LHsiSlNPTlBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sImdyb3VwIjoicHhjLnBlcmNvbmEuY29tIiwibmFtZXMiOnsia2luZCI6IlBlcmNvbmFYdHJhREJDbHVzdGVyIiwibGlzdEtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3Rlckxpc3QiLCJwbHVyYWwiOiJwZXJjb25heHRyYWRiY2x1c3RlcnMiLCJzaG9ydE5hbWVzIjpbInB4YyIsInB4Y3MiXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiY2x1c3RlciJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX0sInZlcnNpb24iOiJ2MS04LTAiLCJ2ZXJzaW9ucyI6W3sibmFtZSI6InYxLTgtMCIsInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6dHJ1ZX0seyJuYW1lIjoidjEtNy0wIiwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZX0seyJuYW1lIjoidjEtNi0wIiwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZX0seyJuYW1lIjoidjEtNS0wIiwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZX0seyJuYW1lIjoidjEtNC0wIiwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZX0seyJuYW1lIjoidjEtMy0wIiwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZX0seyJuYW1lIjoidjEtMi0wIiwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZX0seyJuYW1lIjoidjEtMS0wIiwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjpmYWxzZX0seyJuYW1lIjoidjEiLCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOmZhbHNlfSx7Im5hbWUiOiJ2MWFscGhhMSIsInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6ZmFsc2V9XX19
relatedImages:
- image: percona/percona-xtradb-cluster-operator:1.8.0
  name: ""
- image: quay.io/operatorhubio/percona-xtradb-cluster-operator:v1.8.0
  name: ""
schema: olm.bundle
---
image: quay.io/operatorhubio/percona-xtradb-cluster-operator:v1.9.0
name: percona-xtradb-cluster-operator.v1.9.0
package: percona-xtradb-cluster-operator
properties:
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBBackup
    version: v1alpha1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-1-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-2-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-3-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-4-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-5-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-6-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-7-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-8-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1-9-0
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBCluster
    version: v1alpha1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBClusterBackup
    version: v1
- type: olm.gvk
  value:
    group: pxc.percona.com
    kind: PerconaXtraDBClusterRestore
    version: v1
- type: olm.package
  value:
    packageName: percona-xtradb-cluster-operator
    version: 1.9.0
- type: olm.bundle.object
  value:
    data: 
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJiYWNrdXBzLnB4Yy5wZXJjb25hLmNvbSJ9LCJzcGVjIjp7Imdyb3VwIjoicHhjLnBlcmNvbmEuY29tIiwibmFtZXMiOnsia2luZCI6IlBlcmNvbmFYdHJhREJCYWNrdXAiLCJsaXN0S2luZCI6IlBlcmNvbmFYdHJhREJCYWNrdXBMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmJhY2t1cHMiLCJzaG9ydE5hbWVzIjpbXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiYmFja3VwIn0sInNjb3BlIjoiTmFtZXNwYWNlZCIsInZlcnNpb25zIjpbeyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7ImRlc2NyaXB0aW9uIjoiQ2x1c3RlciBuYW1lIiwianNvblBhdGgiOiIuc3BlYy5weGNDbHVzdGVyIiwibmFtZSI6IkNsdXN0ZXIiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IlN0b3JhZ2UgbmFtZSBmcm9tIHB4YyBzcGVjIiwianNvblBhdGgiOiIuc3RhdHVzLnN0b3JhZ2VOYW1lIiwibmFtZSI6IlN0b3JhZ2UiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkJhY2t1cCBkZXN0aW5hdGlvbiIsImpzb25QYXRoIjoiLnN0YXR1cy5kZXN0aW5hdGlvbiIsIm5hbWUiOiJEZXN0aW5hdGlvbiIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiSm9iIHN0YXR1cyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkNvbXBsZXRlZCB0aW1lIiwianNvblBhdGgiOiIuc3RhdHVzLmNvbXBsZXRlZCIsIm5hbWUiOiJDb21wbGV0ZWQiLCJ0eXBlIjoiZGF0ZSJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWV9XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJjbHVzdGVyYmFja3Vwcy5weGMucGVyY29uYS5jb20ifSwic3BlYyI6eyJncm91cCI6InB4Yy5wZXJjb25hLmNvbSIsIm5hbWVzIjp7ImtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3RlckJhY2t1cCIsImxpc3RLaW5kIjoiUGVyY29uYVh0cmFEQkNsdXN0ZXJCYWNrdXBMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJiYWNrdXBzIiwic2hvcnROYW1lcyI6WyJweGMtYmFja3VwIiwicHhjLWJhY2t1cHMiXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiY2x1c3RlcmJhY2t1cCJ9LCJzY29wZSI6Ik5hbWVzcGFjZWQiLCJ2ZXJzaW9ucyI6W3siYWRkaXRpb25hbFByaW50ZXJDb2x1bW5zIjpbeyJkZXNjcmlwdGlvbiI6IkNsdXN0ZXIgbmFtZSIsImpzb25QYXRoIjoiLnNwZWMucHhjQ2x1c3RlciIsIm5hbWUiOiJDbHVzdGVyIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJTdG9yYWdlIG5hbWUgZnJvbSBweGMgc3BlYyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdG9yYWdlTmFtZSIsIm5hbWUiOiJTdG9yYWdlIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJCYWNrdXAgZGVzdGluYXRpb24iLCJqc29uUGF0aCI6Ii5zdGF0dXMuZGVzdGluYXRpb24iLCJuYW1lIjoiRGVzdGluYXRpb24iLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkpvYiBzdGF0dXMiLCJqc29uUGF0aCI6Ii5zdGF0dXMuc3RhdGUiLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9LHsiZGVzY3JpcHRpb24iOiJDb21wbGV0ZWQgdGltZSIsImpzb25QYXRoIjoiLnN0YXR1cy5jb21wbGV0ZWQiLCJuYW1lIjoiQ29tcGxldGVkIiwidHlwZSI6ImRhdGUifSx7Impzb25QYXRoIjoiLm1ldGFkYXRhLmNyZWF0aW9uVGltZXN0YW1wIiwibmFtZSI6IkFnZSIsInR5cGUiOiJkYXRlIn1dLCJuYW1lIjoidjEiLCJzY2hlbWEiOnsib3BlbkFQSVYzU2NoZW1hIjp7InByb3BlcnRpZXMiOnsic3BlYyI6eyJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLXByZXNlcnZlLXVua25vd24tZmllbGRzIjp0cnVlfSwic3RhdHVzIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX19
- type: olm.bundle.object
  value:
    data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsibmFtZSI6InBlcmNvbmF4dHJhZGJjbHVzdGVycmVzdG9yZXMucHhjLnBlcmNvbmEuY29tIn0sInNwZWMiOnsiZ3JvdXAiOiJweGMucGVyY29uYS5jb20iLCJuYW1lcyI6eyJraW5kIjoiUGVyY29uYVh0cmFEQkNsdXN0ZXJSZXN0b3JlIiwibGlzdEtpbmQiOiJQZXJjb25hWHRyYURCQ2x1c3RlclJlc3RvcmVMaXN0IiwicGx1cmFsIjoicGVyY29uYXh0cmFkYmNsdXN0ZXJyZXN0b3JlcyIsInNob3J0TmFtZXMiOlsicHhjLXJlc3RvcmUiLCJweGMtcmVzdG9yZXMiXSwic2luZ3VsYXIiOiJwZXJjb25heHRyYWRiY2x1c3RlcnJlc3RvcmUifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3siZGVzY3JpcHRpb24iOiJDbHVzdGVyIG5hbWUiLCJqc29uUGF0aCI6Ii5zcGVjLnB4Y0NsdXN0ZXIiLCJuYW1lIjoiQ2x1c3RlciIsInR5cGUiOiJzdHJpbmcifSx7ImRlc2NyaXB0aW9uIjoiSm9iIHN0YXR1cyIsImpzb25QYXRoIjoiLnN0YXR1cy5zdGF0ZSIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn0seyJkZXNjcmlwdGlvbiI6IkNvbXBsZXRlZCB0aW1lIiwianNvblBhdGgiOiIuc3RhdHVzLmNvbXBsZXRlZCIsIm5hbWUiOiJDb21wbGV0ZWQiLCJ0eXBlIjoiZGF0ZSJ9LHsianNvblBhdGgiOiIubWV0YWRhdGEuY3JlYXRpb25UaW1lc3RhbXAiLCJuYW1lIjoiQWdlIiwidHlwZSI6ImRhdGUifV0sIm5hbWUiOiJ2MSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsicHJvcGVydGllcyI6eyJzcGVjIjp7InR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtcHJlc2VydmUtdW5rbm93bi1maWVsZHMiOnRydWV9LCJzdGF0dXMiOnsidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1wcmVzZXJ2ZS11bmtub3duLWZpZWxkcyI6dHJ1ZX19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfX0=
- type: olm.bundle.object
  value:
    data: 
relatedImages:
- image: percona/percona-xtradb-cluster-operator:1.9.0
  name: ""
- image: quay.io/operatorhubio/percona-xtradb-cluster-operator:v1.9.0
  name: ""
schema: olm.bundle
